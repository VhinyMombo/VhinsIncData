---
title: "Analysis of Gabon"
---

## Overview of Gabon

Gabon is a country located on the west coast of Central Africa, bordered by **Equatorial Guinea**, **Cameroon**, and the **Republic of the Congo**, with the **Atlantic Ocean** to the west. Covering an area of approximately **267,000 km²**, it is known for its vast rainforests, rich biodiversity, and relatively small population of around **2.3 million people**.

### Key features of Gabon

-   **Capital & major cities**: The capital city is **Libreville**, while other significant cities include **Port-Gentil, Franceville, and Oyem**.\
-   **Geography & Climate**: Gabon has a **tropical climate** with high humidity, significant rainfall, and dense forests covering about **85%** of the country.\
-   **Economy**: The economy is primarily driven by **oil production, mining, and timber**, with efforts to diversify into ecotourism and sustainable industries.\
-   **Biodiversity & Conservation**: Gabon is home to **13 national parks**, protecting diverse wildlife, including **gorillas, elephants, and chimpanzees**.\
-   **Political System**: It is a **presidential republic**, with a government structure that includes provinces, departments, and communes.

With its abundant natural resources and commitment to conservation, Gabon plays a crucial role in environmental protection and sustainable development in Africa.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(sf)
library(rnaturalearth)
library(leaflet)
library(dplyr)
library(leaflet.extras)

library(WDI)
library(jsonlite)
library(ggplot2)
library(plotly)


library(data.table)
library(patchwork)


# Replace with your shapefile path
shapefile_path <- "data/Gabon2.gpkg"

# Read the shapefile
gabon_sf <- st_read(shapefile_path, quiet = T, )

pal <- colorFactor(palette = "Set3", domain = gabon_sf$NAME_1)



###################
```

```{r, echo=FALSE, message=FALSE, warning=FALSE, include=FALSE}

cities <- rnaturalearth::ne_download(scale = "large", type = "populated_places", category = "cultural")
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
gabon_cities <- cities[cities$ADM0NAME == "Gabon", c("NAME", "LATITUDE", "LONGITUDE", "POP_MAX", "POP_MIN")]


################


# Create a color palette based on the population size (using both POP_MIN and POP_MAX)
pop_palette <- colorNumeric(
  palette = "YlOrRd",   # Color palette for population range
  domain = c(min(gabon_cities$POP_MIN), max(gabon_cities$POP_MAX)),  # Use both minimum and maximum population
  na.color = "gray"  # For missing data
)


leaflet(gabon_sf) %>%
  addProviderTiles(providers$OpenStreetMap, group = "Open Street Map") %>%
  addProviderTiles(providers$Esri.WorldImagery, group = "Esri World Imagery") %>%
  
  # Add Gabon polygons
  addPolygons(
    fillColor = ~pal(NAME_1),
    fillOpacity = 0.3,
    color = "black",
    weight = 1,
    popup = ~paste("Region:", NAME_2, "<br>Province:", NAME_1),
    highlightOptions = highlightOptions(
      weight = 3, color = "red",
      bringToFront = TRUE
    ),
    options = pathOptions(interactive = FALSE),
    group = "Gabon"
  ) %>%
  
  # Add Circle Markers with color based on population size
  addCircleMarkers(
    data = gabon_cities,
    ~LONGITUDE, ~LATITUDE,
    radius = ~sqrt(POP_MAX) / 50,  # Adjust size based on population
    color = ~pop_palette(POP_MAX),  # Color based on population
    fillColor = ~pop_palette(POP_MAX),  # Fill color based on population
    fillOpacity = 0.7,
    popup = ~paste(NAME, "<br> Population:", POP_MAX, "hab"),
    label = ~NAME
  ) %>%
  
  # Add Minimap
  addMiniMap(
    tiles = providers$OpenStreetMap,
    toggleDisplay = TRUE,
    minimized = FALSE,
    width = 150, height = 150,
    position = "bottomright"
  ) %>%
  
  # Add Layers Control
  addLayersControl(
    baseGroups = c("Esri World Imagery", "Open Street Map"),
    overlayGroups = c("Gabon"),
    options = layersControlOptions(collapsed = FALSE)
  )

```

## National Parks in Gabon

Gabon is home to a rich diversity of natural landscapes, with lush rainforests, wildlife reserves, and coastal ecosystems. The country is known for its remarkable commitment to conservation, and a significant portion of its land area is protected within the framework of national parks and nature reserves.

### Overview of Gabon's National Parks

Gabon boasts 13 national parks, covering nearly 11% of the country's total land area. These parks play a crucial role in protecting the biodiversity of the region, including endangered species such as gorillas, elephants, and forest buffalo. Gabon's national parks are also home to pristine rainforests, mangroves, and savannahs, offering a diverse range of habitats for flora and fauna.

### Key Features:

-   **Diverse Ecosystems:** From the dense rainforests of the interior to the coastal wetlands, Gabon's national parks offer an array of ecosystems that support various species of animals, plants, and fungi.
-   **Protected Areas:** Many of Gabon's parks are designated as protected areas under international conservation frameworks, including the Ramsar Convention, which focuses on the protection of wetland habitats.
-   **Wildlife Conservation:** Gabon's parks are essential for the protection of endangered species like the western lowland gorilla and forest elephants. The country has made considerable efforts to ensure the survival of these species through strict anti-poaching laws and sustainable management practices.

```{r, echo=FALSE, message=FALSE, warning=FALSE}


# Load the shapefile


# Define the base path
base_path <- "data/WDPA_WDOECM_Feb2025_Public_GAB_shp/WDPA_WDOECM_Feb2025_Public_GAB_shp_"

# Generate file paths
shapefiles <- sprintf("%s%d", base_path, 0:2)

# Read and combine shapefiles
shapelist <- lapply(shapefiles, 
                    st_read, 
                    layer = "WDPA_WDOECM_Feb2025_Public_GAB_shp-polygons", 
                    quiet = T)



combined_shapefile <- do.call(rbind, shapelist)

# shapefile_path <- "data/WDPA_WDOECM_Feb2025_Public_GAB_shp/WDPA_WDOECM_Feb2025_Public_GAB_shp_0"
# gabon_parks_sf <- st_read(shapefile_path,
#                           layer = "WDPA_WDOECM_Feb2025_Public_GAB_shp-polygons", 
#                           quiet = TRUE)


gabon_parks_sf <- combined_shapefile[, c("NAME", "DESIG_TYPE", "DESIG_ENG")]
# plot(gabon_parks_sf)



# Create a color palette
park_palette_type <- colorFactor("Set2", domain = gabon_parks_sf$DESIG_TYPE)

# Define your map with base tiles
map <- leaflet(gabon_sf) %>% 
  addProviderTiles(providers$OpenStreetMap, group = "Open Street Map") %>% 
  addProviderTiles(providers$Esri.WorldImagery, group = "Esri World Imagery") %>% 
  addProviderTiles(providers$Esri.WorldTopoMap, group = "Esri World Topography") %>% 
  
  addPolygons(
    fillColor = ~pal(COUNTRY),
    fillOpacity = 0.1,
    color = "black",
    weight = 0.5,
    popup = ~paste("Region:", NAME_2, "<br>Province:", NAME_1),
    highlightOptions = highlightOptions(
      weight = 3, color = "red",
      bringToFront = TRUE
    ),
    options = pathOptions(interactive = FALSE),
    group = "Gabon"
  )

# Loop through unique combinations of DESIG_TYPE and DESIG_ENG to add park layers
for (group in unique(paste(gabon_parks_sf$DESIG_TYPE, "-", gabon_parks_sf$DESIG_ENG))) {
  map <- map %>% 
    addPolygons(
      data = gabon_parks_sf %>% filter(paste(DESIG_TYPE, "-", DESIG_ENG) == group), 
      fillColor = ~park_palette_type(DESIG_TYPE), # Correctly reference the column
      fillOpacity = 0.5,
      color = "black",
      weight = 1,
      popup = ~paste("Name:", NAME, "<br>Type:", DESIG_TYPE, "<br>English Type:", DESIG_ENG),
      group = group # Assign unique group name
    )
}

# Add Minimap
map <- map %>% 
  addMiniMap(
    tiles = providers$OpenStreetMap, 
    toggleDisplay = TRUE, 
    minimized = FALSE, 
    width = 150, height = 150, 
    position = "bottomright"
  ) %>% 
  
  # Add Layer Control for both the park and tile providers
  addLayersControl(
    baseGroups = c("Esri World Imagery", "Open Street Map", "Esri World Topography"), # Tile providers
    overlayGroups = unique(paste(gabon_parks_sf$DESIG_TYPE, "-", gabon_parks_sf$DESIG_ENG)), # Park types
    options = layersControlOptions(collapsed = TRUE)
  )

# Print the final map
map
```

### Notable National Parks in Gabon:

1.  **Loango National Park:** Known for its coastal landscapes, Loango is often called the "Land of Giants" due to the large populations of elephants that roam its savannahs and rainforests. The park is also home to a rich variety of marine life, including dolphins and whales.

2.  **Moukalaba-Doudou National Park:** A biodiversity hotspot, Moukalaba-Doudou features pristine forests, wetlands, and savannahs. It is home to a variety of species, including gorillas, chimpanzees, and a wide range of bird species.

3.  **Akanda National Park:** Situated on the coast, Akanda is known for its mangroves, estuaries, and coral reefs, making it a crucial area for both marine and terrestrial biodiversity. The park is also recognized as an important bird area, with numerous species of migratory birds passing through its waters.

4.  **Wonga Wongué Presidential Reserve:** A unique reserve that serves as a haven for both terrestrial and aquatic wildlife, Wonga Wongué is vital for the conservation of species such as the endangered species of elephants and primates.

5.  **Ivindo National Park:** Famous for the stunning Langoué Bai, a large forest clearing where gorillas, elephants, and other wildlife gather to drink, Ivindo is a true gem in Gabon's conservation efforts. The park also features the famous Kongou Falls, a spectacular waterfall that is one of the largest in Africa.

### Conservation Efforts

Gabon has demonstrated a strong commitment to the protection of its natural heritage. In 2002, the government established the **Gabonese Agency for National Parks** to oversee the management of these protected areas. Gabon is also a key player in the **Central African Protected Areas Network** (RAPAC), which promotes cooperation among countries in the Congo Basin to conserve the region's biodiversity.

### Ecotourism and Sustainable Development

Gabon's national parks have also become focal points for ecotourism. By promoting sustainable tourism practices, Gabon aims to balance conservation efforts with local economic development. The parks offer opportunities for wildlife watching, eco-lodging, and educational programs about conservation and biodiversity.

```{r, echo=FALSE, message=FALSE, warning=FALSE}




```



## Activity Zone : Key Locations and Features 🌍

This interactive map provides a detailed visualization of key locations and features in Gabon. It includes various categories such as sports facilities, cultural sites, military zones, educational institutions, residential areas, and hydrographic features. 

## How to Use the Map  
- The map starts unfilled, allowing you to **toggle layers** manually.  
- Use the **layer control panel** (top right) to enable or disable specific categories.  
- Click on **markers and polygons** to view additional details via popups.  

## Map Features  
- 🏅 **Sports Facilities** (e.g., stadiums, sports centers)  
- 🎭 **Culture & Leisure** (e.g., museums, cultural centers)  
- 🪖 **Military Zones** (restricted areas, army bases)  
- 🎓 **Educational Institutions** (schools, universities)  
- 🏠 **Residential Areas** (housing zones)  
- 🌊 **Hydrography** (rivers, lakes, water bodies)  

## Base Maps  
- 🌍 **Imagery**: Satellite view from Esri  
- 🗺️ **Open Street View**: Classic map with detailed streets  

Explore the map and discover Gabon’s diverse landscape and infrastructure! 🚀  


```{r, echo=FALSE, message=FALSE, warning=FALSE}


# Define the path to the shapefile
path.osm <- "data/202303_OSM2IGEO_GABON_SHP_WGS84_4326/I_OSM_ZONE_ACTIVITE"

# List the layers available in the shapefile
layers <- st_layers(path.osm)

# Initialize the leaflet map
map <- leaflet() %>%
  # Add first additional tile provider (e.g., Stamen Toner)
  addProviderTiles(providers$Esri.WorldImagery, group = "Imagery") %>%
  
  # Add second additional tile provider (e.g., CartoDB Positron)
  addProviderTiles(providers$OpenStreetMap, group = "Open street view")


gabon_sport <- st_read(path.osm, layer = "PAI_SPORT", quiet = TRUE)

gabon_culture <- st_read(path.osm, layer = "PAI_CULTURE_LOISIRS", quiet = TRUE)

gabon_army <- st_read(path.osm, layer = "TERRAIN_MILITAIRE", quiet = TRUE)

gabon_enseignement <- st_read(path.osm, layer = "PAI_SCIENCE_ENSEIGNEMENT", quiet = TRUE)


gabon_habitation <- st_read(path.osm, layer = "PAI_ZONE_HABITATION", quiet = TRUE)

gabon_hydrographie <- st_read(path.osm, layer = "PAI_HYDROGRAPHIE", quiet = TRUE)

map <- map %>% 
  addCircleMarkers(
    data = gabon_sport,
    radius = 5,
    color = "orange",
    stroke = TRUE,
    weight = 1,
    fillOpacity = 0.9,
    popup = ~paste("Sport", ":", NOM),
    group = "🏅 Sport"
  ) %>%
  addCircleMarkers(
    data = gabon_culture,
    radius = 5,
    color = "purple",
    stroke = TRUE,
    weight = 1,
    fillOpacity = 0.9,
    popup = ~paste("Culture et Loisirs", ":", NOM),
    group = "🎭 Culture et Loisirs"
  ) %>%
  addPolygons(
    data = gabon_army,
    color = "brown",
    weight = 1,
    fillOpacity = 0.4,
    popup = ~paste("Army"),
    group = "🪖 Military Zones"
  ) %>%
  addCircleMarkers(
    data = gabon_enseignement,
    radius = 5,
    color = "pink",
    stroke = TRUE,
    weight = 1,
    fillOpacity = 0.9,
    popup = ~paste("Enseignement", ":", NOM),
    group = "🎓 Enseignement"
  ) %>%
  addCircleMarkers(
    data = gabon_habitation,
    radius = 5,
    color = "blue",
    stroke = TRUE,
    weight = 1,
    fillOpacity = 0.9,
    popup = ~paste("Habitation", ":", NOM),
    group = "🏠 Habitation"
  ) %>%
  addCircleMarkers(
    data = gabon_hydrographie,
    radius = 5,
    color = "cyan",
    stroke = TRUE,
    weight = 1,
    fillOpacity = 0.9,
    popup = ~paste("Hydrographie", ":", NOM),
    group = "🌊 Hydrographie"
  ) %>%
  
  addMiniMap(
    tiles = providers$OpenStreetMap, 
    toggleDisplay = TRUE, 
    minimized = FALSE, 
    width = 150, height = 150, 
    position = "bottomright"
  ) %>% 
  
  
  addLayersControl(
    overlayGroups = c("🏅 Sport", "🎭 Culture et Loisirs", "🪖 Military Zones", "🎓 Enseignement", "🏠 Habitation", "🌊 Hydrographie"),
    options = layersControlOptions(collapsed = TRUE),
    baseGroups = c("Imagery", "Open street view")
  ) %>%
  hideGroup(c("🏅 Sport", "🎭 Culture et Loisirs", "🪖 Military Zones", 
              "🎓 Enseignement", "🏠 Habitation", "🌊 Hydrographie")) # Hide all layers initially


map



```

## Evolution of Gabon's population

The population of Gabon has experienced significant growth over the years, reflecting trends of urbanization, healthcare improvements, and socio-economic changes. From 2000 to 2023, Gabon's total population has steadily increased, with notable fluctuations depending on key national and global events.

The line chart below shows the total population of Gabon from 2000 to 2023, with a polynomial regression curve fitted to capture the underlying trend. The chart offers a clearer view of the population's progression over the years, including the acceleration in growth during specific periods.

By visualizing the data, we can identify key periods of population increase and analyze them in the context of national policies, economic growth, and demographic shifts. These insights are valuable for planning resources and predicting future trends in the country's development.

```{r, echo=FALSE, message=FALSE, warning=FALSE}

# Récupérer les données de population du Gabon
gabon_pop <- WDI(country = "GA", indicator = "SP.POP.TOTL", start = 1960, end = 2023)




gabon_pop <- setDT(gabon_pop)

setnames(gabon_pop, "SP.POP.TOTL", "population")

setorder(gabon_pop, year)


gabon_pop[, variation := round((population - shift(population, 1)) / shift(population, 1) * 100, 2)]

gabon_pop[, second_variation := round((variation - shift(variation, 1)) / shift(variation, 1) * 100, 2)]


gabon_pop[, sign_change := sign(second_variation) != shift(sign(second_variation), 1, type = "lag")]

change_years <- gabon_pop[sign_change == TRUE, year]


gabon_pop$second_derivative_color <- ifelse(gabon_pop$second_variation < 0, "red", "green")



# Load the necessary libraries

# Create the plot with ggplot2 (before converting to plotly)
ggplot_obj <- ggplot(gabon_pop, aes(x = year, y = population)) + 
  geom_line(color = "steelblue", size = 1) +  # Line plot
  geom_point(color = "red", size = 2) +        # Points for each year
  geom_vline(data = gabon_pop[sign_change == TRUE], aes(xintercept = year), 
             color = "black", linetype = "dashed", size = 1) +  # Vertical lines where acceleration changes sign
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), color = "green", se = FALSE) +  # Polynomial smoothing line
  scale_y_continuous(labels = scales::comma) + # Format Y-axis with commas
  labs(
    title = "Evolution of Gabon's Total Population (2000-2023)",
    x = "Year",
    y = "Total Population",
    caption = "Source: World Bank"
  ) +
  theme_minimal() +  # Minimal theme for a clean look
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Centered bold title
    axis.title = element_text(size = 12),  # Axis titles size
    axis.text = element_text(size = 10)    # Axis text size
  )

poly_model <- lm(population ~ poly(year, 2), data = gabon_pop)
# Convert ggplot to plotly for interactivity
plotly_obj <- ggplotly(ggplot_obj)

# Extract coefficients from the polynomial model
coef_poly <- coef(poly_model)

# Create the polynomial equation as a string (for degree 2)
equation <- paste0("y = ", round(coef_poly[1], 2), " + ", round(coef_poly[2], 2), "x + ", round(coef_poly[3], 2), "x^2")

plotly_obj <- plotly_obj %>% 
  layout(
    annotations = list(
      x = 2015,  # Position of the equation (adjust as necessary)
      y = 2000000,  # Adjust based on your plot range
      text = paste0("$$", equation, "$$"),  # LaTeX-style formatting
      showarrow = FALSE,
      font = list(size = 14, color = "black", family = "Arial"),
      align = "center"
    )
  )

# Show the plot
plotly_obj
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Create the plot with ggplot2 (before converting to plotly)

ggplot_obj1 <- ggplot(gabon_pop, aes(x = year, y = variation)) + 
  geom_line(color = "steelblue", size = 1) +  # Line plot
  geom_point(color = "red", size = 2) +        # Points for each year
  geom_vline(data = gabon_pop[sign_change == TRUE], aes(xintercept = year), 
             color = "black", linetype = "dashed", size = 1) +  # Vertical lines where acceleration changes sign
  # Shading the area based on the second derivative
  geom_rect(data = gabon_pop[gabon_pop$second_derivative_color == "red"], 
            aes(xmin = year - 0.5, xmax = year + 0.5, ymin = -Inf, ymax = Inf), 
            fill = "red", alpha = 0.2) +  # Red for negative second derivative
  geom_rect(data = gabon_pop[gabon_pop$second_derivative_color == "green"], 
            aes(xmin = year - 0.5, xmax = year + 0.5, ymin = -Inf, ymax = Inf), 
            fill = "green", alpha = 0.2) +  # Green for positive second derivative
  
  scale_y_continuous(labels = scales::comma) + # Format Y-axis with commas
  labs(
    title = "Population growth in Gabon (2000-2023)",  # Updated title
    x = "Year", 
    y = "Population growth (%)",  # Adjusted Y-axis label
    caption = "Source: World Bank"
  ) + 
  theme_minimal() +  # Minimal theme for a clean look
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Centered bold title
    axis.title = element_text(size = 12),  # Axis titles size
    axis.text = element_text(size = 10)    # Axis text size
  )


ggplot_obj2 <- ggplot(gabon_pop, aes(x = year, y = second_variation)) + 
  geom_line(color = "steelblue", size = 1) +  # Line plot
  geom_point(color = "red", size = 2) +        # Points for each year
  geom_vline(data = gabon_pop[sign_change == TRUE], aes(xintercept = year), 
             color = "black", linetype = "dashed", size = 1) + 
  
  scale_y_continuous(labels = scales::comma) + # Format Y-axis with commas
  labs(
    title = "Acceleration in Gabon's population growth (2000-2023)",  # Updated title
    x = "Year", 
    y = "Second derivative of population growth (pp / an)",  # Updated Y-axis label
    caption = "Source: World Bank"
  ) + 
  theme_minimal() +  # Minimal theme for a clean look
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Centered bold title
    axis.title = element_text(size = 12),  # Axis titles size
    axis.text = element_text(size = 10)    # Axis text size
  )


ggplot_obj1 <- ggplotly(ggplot_obj1)
ggplot_obj1
```

Gabon has experienced steady population growth over the last few decades, with the total population rising from approximately **512,316** in 1960 to over **2.48 million** in 2023. The growth trajectory has shown periods of acceleration, which are particularly notable in recent years.

The dashed vertical lines in the plot represent shifts in the **acceleration of population growth**. These shifts highlight specific years where the rate of population increase changed significantly, signaling a change in underlying demographic factors.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ggplot_obj2 <- ggplotly(ggplot_obj2)

ggplot_obj2
# ggplotly(rr)

```

### Key Influencing Factors:

-   **Urbanization**: Gabon has seen increased urbanization, with a growing proportion of the population living in cities, especially in the capital, Libreville. This trend is typically associated with improved access to services and economic opportunities, which may drive higher birth rates.

-   **Health Care Improvements**: Advances in healthcare, such as better access to medical services and improved life expectancy, have likely contributed to population growth by reducing mortality rates.

-   **Migration**: Gabon, as one of the more stable and economically prosperous countries in Central Africa, has attracted migration, particularly from neighboring countries. This influx of people contributes to the overall population increase.

Understanding these dynamics is crucial for policymakers to plan for future infrastructure, healthcare, and social services, as the population continues to grow.
